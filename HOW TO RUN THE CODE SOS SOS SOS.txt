ΌΤΑΝ ΑΚΟΛΟΥΘΗΘΟΥΝ ΤΑ ΠΑΡΑΚΑΤΩ ΒΗΜΑΤΑ ΚΑΙ ΤΡΕΞΕΙ Η ΕΦΑΡΜΟΓΗ ΘΕΛΕΙ ΠΡΟΣΟΧΗ ΣΤΗΝ ΚΑΤΑΧΩΡΗΣΗ Ή ΤΡΟΠΟΠΟΙΗΣΗ ΤΗΣ ΩΡΑΣ!
ΘΕΛΕΙ ΣΥΓΚΕΚΡΙΜΕΝΑ 2 ΦΟΡΕΣ ΚΑΤΑΧΩΡΗΣΗ... ΜΙΑ ΦΟΡΑ ΚΛΙΚ ΣΤΟ FIELD ΠΑΝΩ ΚΑΙ ΞΑΝΑ ΕΠΙΤΟΠΟΥ ΔΕΥΤΕΡΟ ΚΛΙΚ ΣΤΑ ΒΕΛΑΚΙΑ ΤΟΥ FIELD...
ΣΕ ΔΙΑΦΟΡΕΤΙΚΗ ΠΕΡΙΠΤΩΣΗ ΤΟ BACKEND ΘΑ ΕΠΙΣΤΡΕΨΕΙ ΜΗΝΥΜΑ ΠΩΣ Η ΚΑΤΑΧΩΡΗΣΗ ΔΕΝ ΕΓΙΝΕ...

το bug αυτό δεν μπόρεσα να το λύσω δυστυχώς... αυτό που φαίνεται στον debugger όμως είναι το εξής:
επειδή το clock αυτό ονομάζεται atp (amazing time picker) και εγκαταστάται από το npm έτσι όπως έχει δημιουργηθεί δεν πυροδοτεί κάποιο
change event αφού κλείσει με αποτέλεσμα το 1ο κλικ να ανοίγει σε popup τον atp και το 2ο στην ουσία να πυροδοτεί το change 
event το οποίο είναι αυτό που θα μεταφέρει στο model την τιμή του field ώστε να γίνει η καταχώρηση στη βάση...

για σχετικό debug το πρόβλημα βρίσκεται στις παρακάτω γραμμές...

γραμμή 18 στον κώδικα του αρχείου --> dialog-component.component.html
γραμμές 92-107 στον κώδικα του αρχείου της λογικής --> dialog-component.component.ts


-----------------------------------------------
ΠΩΣ ΤΡΕΧΟΥΜΕ ΤΟΝ ΚΩΔΙΚΑ... (όλες οι εντολές εκτελούνται στο node cli το οποίο με την εντολή cd αρχικά μεταβαίνουμε στο φάκελο του
project μας πριν εκτελέσουμε οποιαδήποτε άλλη εντολή)

Έχουμε 2 αρχεία server.js

Το server.js καλείται με get στο root url και σερβίρει πίσω το frontend στον client το οποίο διαβάζει από τον φάκελο dist
ο οποίος περιέχει το frontend αλλά όχι σε source code μορφή παρά σε μορφή τέτοια που έχει δημιουργηθεί από την 
εντολή ng build άρα έχουμε "χτίσει" εκεί το project μας. Έχοντας τον dist το server.js και όλα τα υπόλοιπα αρχεία στον ίδιο φάκελο 
με το server.js καθώς επίσης και τον φάκελο node_modules μπορούμε να τρέξουμε το project με την εντολή
node server.js ή nodemon server.js (αν το έχουμε εγκαταστήσει) στο node cli. Επίσης να έχουμε ενεργοποιήσει τη βάση αν τρέχουμε τον
xampp. Επισκεπτόμαστε το σύνδεμο --> "localhost:3000" και βλέπουμε την εφαρμογή μας!!!

Ο φάκελος node_modules δεν περιλαμβάνεται εδώ, γι'αυτό το λόγο θα πρέπει στο node cli να εκτελεστεί η εντολή
cd project_folder για μεταφορά στον φάκελο του project μας και στη συνέχεια η εντολή npm install ώστε να διαβαστεί 
το αρχείο package.json από τον npm και να δημιουργηθεί ο φάκελος node_modules με όλα τα modules και dependencies
που απαιτούνται...

---------------------------------------------

Το server2.js εκτελείται πρώτα με την εντολή node server2.js ή nodemon server2.js. 
Μετά εκτελούμε την εντολή ng serve η οποία σερβίρει από τον
φακελο src τον κώδικα επίσης δεν ξεχνούμε να ενεργοποιήσουμε τη βάση μας και επισκεπτόμαστε στο τέλος το σύνδεσμο "localhost:4200" 
και βλέπουμε την εφαρμογή μας...

Θα πρέπει και σε αυτή τη μέθοδο να προσέξουμε να υπάχουν όλα τα αρχεία του project με την ιεραρχεία που υπάρχουν σε αυτό το 
αποθετήριο + τον φάκελο node_modules...

--------------------------------------------

Ο κώδικας τρέχει localhost ... αν έχουμε τον xampp τα credentials της βάσης είναι αυτά 
που έχουν ήδη χρησιμοποιηθεί και είναι τα ακόλουθα...

  host     : 'localhost',
	user     : 'root',
	password : '',
	database : 'mydb'
  
όπου database : 'mydb' η βάση που έχουμε δημιουργήσει με το όνομα που της δώσαμε σε κάθε
άλλη περίπτωση βάσης αυτά θα πρέπει να αλλάξουν στη γραμμή 26-32 στο αρχείο server.js 
και στη γραμμή 20-26 στο αρχείο server2.js ανάλογα με το ποιο τρέχουμε...

για τη δημιουργία του table εκτελούμε την sql εντολή:

CREATE TABLE records (
 
   
	id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,    
	activity VARCHAR(20) NOT NULL,    
	currentMonth INT(20) NOT NULL,    
	currentDay INT(20) NOT NULL,    
	currentYear INT(20) NOT NULL,    
	Scheduled_at TIME NOT NULL,    
	duration INT(20) NOT NULL,  
	priority BOOLEAN NOT NULL

)
 και για οποιοδήποτε άλλο είδους deploy εκτός του localhost καλό είναι να λάβουμε υπόψη εάν χρειαστεί 
 και τη γραμμή 15 στη διαδρομή 
 για το αρχείο NodeJs-Angular-Express-Calendar-Scheduling-Web-App/src/app/httpservice.service.ts στο repository αυτό... 
 Από αυτή τη γραμμή το frontend χτυπάει και βρίσκει το backend...
 
 Ο φάκελος dist έχει δημιουργηθεί με τη γραμμή 15 που αναφέρεται παραπάνω να βρίσκει το backend για localhost deployment. 
 Όποια αλλαγή γίνει στο frontend για άλλο είδους deployment ο φάκελος dist εάν χρησιμοποιηθεί στο deploy θα πρέπει να 
 ξαναδημιουργηθεί τρέχουντας την εντολή ng build --prod στο node cli αφού το έχουμε κάνει να "βλέπει" το φάκελο του 
 project με την εντολή cd project_folder_path
